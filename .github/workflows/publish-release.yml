name: Publish Release
on:
  release:
    types: [published]

jobs:
  publish-release:
    if: "!github.event.release.prerelease"
    name: Publish Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@50fbc622fc4ef5163becd7fab6573eac35f8462e
        with:
          submodules: recursive
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@1c5c1375b3817ad821719597effe8e3d6f764930
        with:
          node-version: '12.14.1'
          registry-url: 'https://registry.npmjs.org'
      - name: Before Install
        run: |
          npm install -g npm@6.13.6
          yarn global add typescript
          yarn global add webpack
          echo "node $(node --version)"
          echo "npm $(npm --version)"
          echo "yarn $(yarn --version)"
      - name: Install
        run: |
          yarn
      - name: Lint
        run: |
          yarn lint
      - name: Test
        run: |
          yarn test
      - name: Publish Release
        run: |
          . ./scripts/publish-utils.sh
          setup_git
          TAG="$(echo $GITHUB_REF | cut -f3 -d'/')"
          echo "npm version -no-git-tag-version $TAG"
          echo "git commit -a -m Updating version [skip ci]"
          echo "cp .npmrc.template $HOME/.npmrc"
          echo "npm publish --tag"


  publish-rc:
    if: "github.event.release.prerelease"
    name: Publish RC
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@50fbc622fc4ef5163becd7fab6573eac35f8462e
        with:
          submodules: recursive
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@1c5c1375b3817ad821719597effe8e3d6f764930
        with:
          node-version: '12.14.1'
          registry-url: 'https://registry.npmjs.org'
      - name: Before Install
        run: |
          npm install -g npm@6.13.6
          yarn global add typescript
          yarn global add webpack
          echo "node $(node --version)"
          echo "npm $(npm --version)"
          echo "yarn $(yarn --version)"
      - name: Install
        run: |
          yarn
      - name: Lint
        run: |
          yarn lint
      - name: Test
        run: |
          yarn test
      - name: Publish RC
        run: |
          . ./scripts/publish-utils.sh
          setup_git
          TAG="$(echo $GITHUB_REF | cut -f3 -d'/')"
          echo "npm version -no-git-tag-version $TAG"
          echo "git commit -a -m Updating version [skip ci]"
          echo "cp .npmrc.template $HOME/.npmrc"
          echo "npm publish --tag RC"